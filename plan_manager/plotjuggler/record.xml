<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="tab1">
   <Container>
    <DockSplitter count="2" orientation="-" sizes="0.500583;0.499417">
     <DockSplitter count="2" orientation="|" sizes="0.502449;0.497551">
      <DockArea name="...">
       <plot flip_x="false" flip_y="false" mode="TimeSeries" style="Lines">
        <range left="10.923245" top="52.500000" right="15.923226" bottom="-52.500000"/>
        <limitY/>
        <curve name="/simulation/KinematicState/centripetal_acc" color="#1f77b4"/>
        <curve name="/simulation/KinematicState/max_centripetal_acc" color="#d62728"/>
        <curve name="/simulation/KinematicState/max_moment" color="#1ac938"/>
        <curve name="/simulation/KinematicState/min_moment" color="#ff7f0e"/>
        <curve name="/simulation/KinematicState/moment" color="#f14cc1"/>
        <curve name="/simulation/KinematicState/min_centripetal_acc" color="#9467bd"/>
       </plot>
      </DockArea>
      <DockArea name="...">
       <plot flip_x="false" flip_y="false" mode="TimeSeries" style="Lines">
        <range left="10.923245" top="0.942500" right="15.923226" bottom="-9.242500"/>
        <limitY/>
        <curve name="/simulation/PosePub/x" color="#1f77b4"/>
        <curve name="/simulation/PosePub/y" color="#d62728"/>
        <curve name="/simulation/PosePub/yaw" color="#1ac938"/>
        <curve name="/ICREKF/EKF_XYTheta/point/x" color="#ff7f0e"/>
        <curve name="/ICREKF/EKF_XYTheta/point/y" color="#f14cc1"/>
        <curve name="/ICREKF/EKF_XYTheta/point/z" color="#9467bd"/>
       </plot>
      </DockArea>
     </DockSplitter>
     <DockSplitter count="2" orientation="|" sizes="0.50049;0.49951">
      <DockArea name="...">
       <plot flip_x="false" flip_y="false" mode="TimeSeries" style="Lines">
        <range left="10.923245" top="0.100000" right="15.923226" bottom="-0.100000"/>
        <limitY/>
        <curve name="/simulation/PosePub/omega" color="#17becf"/>
        <curve name="/simulation/PosePub/v" color="#bcbd22"/>
       </plot>
      </DockArea>
      <DockArea name="...">
       <plot flip_x="false" flip_y="false" mode="TimeSeries" style="Lines">
        <range left="10.923245" top="0.100000" right="15.923226" bottom="-0.100000"/>
        <limitY/>
        <curve name="/simulation/ControlPub/left_wheel_ome" color="#1f77b4"/>
        <curve name="/simulation/ControlPub/right_wheel_ome" color="#d62728"/>
       </plot>
      </DockArea>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS bags">
   <use_header_stamp value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value=""/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS Topic Subscriber">
   <use_header_stamp value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/ALL_EKF_ICR_eigenvalues;/EKF_ICR_eigenvalues;/ICREKF/EKF_ICR;/ICREKF/EKF_XYTheta;/ICREKF/Simple_EKF_ICR;/SDFmap/ESDF;/SDFmap/ESDFGrad;/SDFmap/debug;/SDFmap/gridmap;/SDFmap/path_ESDF;/SDFmap/unknown_ESDF;/clicked_point;/global_map/gridmap;/global_map/laser_gridmap;/global_map/surf;/global_planning/init_jps_path;/global_planning/jps_path;/global_planning/kinoastar/expanded_nodes;/global_planning/normal_vector;/initialpose;/laser_simulator/laser_range;/laser_simulator/local_pointcloud;/laser_simulator/tf;/move_base_simple/goal;/nmpc/Real_velocity;/nmpc/Ref_path;/nmpc/Ref_path_marker;/nmpc/Ref_velocity;/nmpc/cmd_path;/nmpc/predicted_path;/nmpc/sequence;/planner/emergency_stop;/planner/traj_poly;/rosout;/rosout_agg;/simulation/ControlPub;/simulation/ControlSub;/simulation/KinematicState;/simulation/PosePub;/simulation/PoseSub;/simulation/SimulatedCarState;/simulator/simulation/RvizCar;/simulator/simulation/RvizCarArrow;/simulator/simulation/RvizRadarRange;/simulator/simulation/accu_traj;/tf;/visualizer/CollisionpointPub;/visualizer/ConvertPath;/visualizer/InitConvertPath;/visualizer/convertpointmarkerarraypub;/visualizer/finalnode;/visualizer/innerinitpositionsPoint;/visualizer/kinoastarPath;/visualizer/kinoastarPathPCL;/visualizer/mincoPath;/visualizer/mincoPoint;/visualizer/mincoinitPath;/visualizer/mincoinitPoint;/visualizer/pathmincoinitPath;/visualizer/pathmincoinitPoint"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS /rosout Visualization"/>
  <plugin ID="ROS Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

